*Lab 2: 5-bit Adder 

.include "nominal.jsim"
.include "lab2checkoff.jsim"
//.include "8clocks.jsim"
//.include "lab1checkoff.jsim"

* INVERTER: input is A, output is Z; taken from Lab 1
.subckt inv a z
MPD1 z a 0 0 NENH sw=16 sl=1
MPU1 z a vdd vdd PENH sw=16 sl=1
.ends

* 2 input NAND2: input are A & B, output is Z; checked and works
.subckt nand2 a b z
//Pulldown
MPD1 z a 1 0 NENH sw=16 sl=1
MPD2 1 b 0 0 NENH sw=16 sl=1
//Pullup
MPU1 z a vdd vdd PENH sw=16 sl=1
MPU2 z b vdd vdd PENH sw=16 sl=1
.ends

* 3-input NAND: inputs are A, B & C, output is Z;checked and works
.subckt nand3 a b c z
//pulldown
MPD1 z a 1 0 NENH sw=16 sl=1
MPD2 1 b 2 0 NENH sw=16 sl=1
MPD3 2 c 0 0 NENH sw=16 sl=1
//pullup
MPU1 z a vdd vdd PENH sw=16 sl=1
MPU2 z b vdd vdd PENH sw=16 sl=1
MPU3 z c vdd vdd PENH sw=16 sl=1
.ends

* 2 input NOR2: input are A & B, output is Z; checked and works
.subckt nor2 a b z
//Pulldown
MPD1 z a 0 0 NENH sw=16 sl=1
MPD2 z b 0 0 NENH sw=16 sl=1
//Pullup
MPU1 1 a vdd vdd PENH sw=16 sl=1
MPU2 z b 1 vdd PENH sw=16 sl=1
.ends

* 2 input XOR2: input are A & B, output is Z; checked and works
.subckt xor2 a b z
//Gate
Xgate a b 1 nor2 //name, inp, inp, output, instance
//Pullup
MPD1 z a 2 0 NENH sw=16 sl=1
MPD2 2 b 0 0 NENH sw=16 sl=1
MPD3 z 1 0 0 NENH sw=16 sl=1


//Pulldown
MPU3 z 1 3 vdd PENH sw=16 sl=1
MPU1 3 a vdd vdd PENH sw=16 sl=1
MPU2 3 b vdd vdd PENH sw=16 sl=1
.ends

*Full Adder: inputs A, B & Ci, output is S, Co; 
.subckt FA a b ci s co
//S output; made of XOR Gates
Xxor1 a b 1 xor2 //name, inp, inp, output, instance
Xxor2 1 ci s xor2
//Co output; made of 4 NAND gates
Xnand21 a b 2 nand2 
Xnand22 a ci 3 nand2 
Xnand23 b ci 4 nand2
Xnand31 2 3 4 co nand3//name, inp, inp, inp, out
.ends



.subckt ADDER4 a3 a2 a1 a0 b3 b2 b1 b0 s4 s3 s2 s1 s0
* remember the node named "0" is the ground node
* nodes c0 through c3 are internal to the ADDER module
Xbit0 a0 b0 0 s0 c0 FA
Xbit1 a1 b1 c0 s1 c1 FA
Xbit2 a2 b2 c1 s2 c2 FA
Xbit3 a3 b3 c2 s3 s4 FA
.ends


//***********TESTS***************
/*.subckt F A B C Z
Xcircuit A B C Z nand3 //name, inp, inp, inp, output, instance
.ends*/
/*Xtest clk1 clk2 clk3 S CO FA
.tran 40ns
.plot L(clk1)
.plot L(clk2)
.plot L(clk3)
.plot L(S)
.plot L(CO)
*/